// Leetcode 35. Search Insert Position

class Main {
  public static void main(String[] args) {
    int[] nums = {1, 3, 5, 6};
    int target = 5; 
    System.out.println(searchInsert(nums, target));
  }

  public static int searchInsert(int[] nums, int target) {
    /*

    nums = 1, 3, 5, 6
    target = 5

    left = 0 
    right = len(nums) - 1

    while (left <= right):
      mid = left + (right - left) / 2

      if (nums[mid] == target):
        return mid

      if (nums[mid] > target):
        right = mid - 1
      else 
        left = mid + 1

    return left 
    // works for both cases(when input > target and input < target)


    ===============

    Time = O(log n)
    Space = O(1)

    */

    int left = 0;
    int right = nums.length - 1;

    while (left <= right) {
      int mid = left + (right - left) / 2;

      if (nums[mid] == target) {
        return mid;
      }  

      if (nums[mid] > target) {
        right = mid - 1;
      }  else {
        left = mid + 1;
      }
    }
    return left;
    
  }

}
