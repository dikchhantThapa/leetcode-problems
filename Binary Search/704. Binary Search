// Leetcode 704. Binary Search

class Main {
  public static void main(String[] args) {
    int[] nums = {-1, 0, 3, 5, 9, 12}; // output = 4 
    int target = 9;
    System.out.println(search(nums, target));
  }

  public static int search(int[] nums, int target) {
    
    /*

    Brute force = normal loop search (Time = Linear) O(n)  // invalid for this Q.

    ----

    Pseudocode: 

    left = 0
    right = nums.len - 1

    while (left <= right):
      mid = left + (right - left) / 2
      if (nums[mid] == target):
        return mid
        
      if (nums[mid] > target):
        right = mid - 1
      else 
        left= mid + 1


    return - 1      // nothing found

    ----

    Time = O(n)
    Space = O(1)
    
    */

    int left = 0;
    int right = nums.length - 1;

    while (left <= right) {
      int mid = left + (right - left) / 2;
      if (nums[mid] == target) {
        return mid;
      }

      if (nums[mid] > target) {
        right = mid - 1;
      }  else {
        left = mid + 1;
      }
      
    }

    return -1;

    
  }

  
}
